{"version":3,"sources":["components/getBubbleSortAnimations.js","components/gerQuickSortAnimations.js","components/getMertgeSortAnimation.js","components/slide.jsx","components/home.jsx","App.js","serviceWorker.js","index.js"],"names":["getBubbleSortAnimations","array","animations","length","mainArray","endIdx","boo","eidx","i","j","push","sweap","bubbleSortHelper","idx1","idx2","temp","getQuickSortAnimations","quickSort","min","max","pi","pivot","getPivot","CHANGE","merge","mergeSort","arr","mid","Math","floor","r","l","n1","n2","k","doMerge","Slide","resetArray","useState","value","setValue","type","onChange","document","getElementById","id","Home","props","startSort","algo","querySelector","bubbleSort","reset","n","state","this","ref","random","setState","m","getElementsByTagName","timeout","disabled","s","arrBar","getElementsByClassName","current","setTimeout","style","backgroundColor","height","arrayLength","barOneIdx","barTwoIdx","col","barOneHeight","barTwoHeight","arrayBars","barOne","barTwo","clearTimeout","animation","index","index1","index2","height1","height2","className","map","idx","key","onClick","defaultValue","window","innerWidth","htmlFor","React","Component","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.16d05533.chunk.js","sourcesContent":["export function getBubbleSortAnimations(array){\r\n    const animations = [];\r\n    if (array.length <= 1) return array;\r\n    bubbleSortHelper(array, array.length - 1, animations);\r\n    return animations;\r\n}\r\nfunction bubbleSortHelper(\r\n    mainArray,\r\n    endIdx,\r\n    animations,\r\n) {\r\n    let boo = true\r\n    const eidx = endIdx;\r\n    for (let i = 0; i < eidx; ++i){\r\n        boo = false\r\n        for(let j = 0; j < eidx-i; ++j){\r\n            animations.push([j, j+1,0,mainArray[j],mainArray[j+1]]);\r\n            if(mainArray[j] > mainArray[j+1]){\r\n                animations.push([j, j+1,1,mainArray[j],mainArray[j+1]]);\r\n                sweap(mainArray, j, j + 1);\r\n                boo = true\r\n            }\r\n            else{\r\n                animations.push([j, j+1,1,mainArray[j+1],mainArray[j]]);\r\n            }\r\n        }\r\n        \r\n        if (boo === false) {\r\n            break;\r\n        }\r\n    }\r\n\r\n}\r\nfunction sweap(\r\n    mainArray,\r\n    idx1,\r\n    idx2\r\n){\r\n    let temp = mainArray[idx1];\r\n    mainArray[idx1] = mainArray[idx2];\r\n    mainArray[idx2] = temp;\r\n}","\r\n\r\nexport function getQuickSortAnimations(array) {\r\n    const animations = []\r\n\r\n    quickSort(array, 0, array.length-1, animations);\r\n    return animations;\r\n}\r\n\r\n\r\nfunction quickSort(array, min, max, animations) {\r\n    if (min < max) {\r\n        \r\n        const pi = getPivot(array, min, max, animations);\r\n        \r\n        quickSort(array, min, pi - 1, animations);\r\n        quickSort(array, pi+1,max, animations);\r\n    }\r\n}\r\n\r\n\r\nfunction getPivot(array, min, max, animations) {\r\n    let pivot = array[max];\r\n    let i = (min - 1);\r\n    animations.push([max, 0, 4]);\r\n    for (let j = min; j < max; j++){\r\n        animations.push([max, j, 2]);\r\n        if (array[j] < pivot) {\r\n            i++;\r\n            animations.push([i, array[i], j, array[j]]);\r\n            [array[i], array[j]] = [array[j], array[i]];\r\n            animations.push([i, array[i], j, array[j]]);\r\n            animations.push([i, j, 0]);\r\n        }\r\n        animations.push([max, j, 0]);\r\n    }\r\n    i++;\r\n    animations.push([i, array[i], max, array[max]]);\r\n    [array[i], array[max]] = [array[max], array[i]];\r\n    animations.push([i, array[i], max, array[max]]);\r\n    animations.push([i, max, 0]);\r\n    return i;\r\n}","const CHANGE = [];\r\n\r\n\r\n//Color change to primary = 0;\r\n// color change to secondary = 1\r\n// change in height = 2\r\n\r\n\r\n\r\nexport function merge(array){\r\n\r\n    mergeSort(array,0,array.length-1);   \r\n\r\n    // console.log(CHANGE);\r\n    return [CHANGE];\r\n    \r\n\r\n    \r\n    // const arrBar = document.getElementsByClassName(\"array-bar\");\r\n    // // console.log(arrBar.length)\r\n    // for(let i = 0; i < CHANGE.length; i++){\r\n    //     let current = CHANGE[i];\r\n\r\n    //     // console.log(CHANGE[i],i);\r\n    //     if(current[1] == 0){\r\n    //         // console.log(current[0]);\r\n    //         // console.log(CHANGE[i],i);\r\n    //         setTimeout(()=>{\r\n    //             arrBar[current[0]].style.backgroundColor = PRIMARY_COLOR;\r\n    //         },i*ANIMATION_SPEED);\r\n    //     }\r\n    //     else if(current[1] == 1){\r\n            \r\n    //         setTimeout(()=>{\r\n    //             arrBar[current[0]].style.backgroundColor = SECONDARY_COLOR;\r\n    //         },i*ANIMATION_SPEED);\r\n    //     }\r\n    //     else if(current[1] == 2){\r\n            \r\n    //         setTimeout(()=>{\r\n    //             arrBar[current[0]].style.height = `${current[2]}px`;\r\n    //         },i*ANIMATION_SPEED);\r\n    //     }\r\n        \r\n    // }\r\n}\r\n\r\nfunction mergeSort(arr,min,max){\r\n    if(min >= max){\r\n        return;\r\n    }\r\n\r\n    // Calculating mid range to divide array in two part \r\n    const mid = Math.floor((min+max)/2);\r\n\r\n    // recursive call left half\r\n    mergeSort(arr,min,mid);\r\n\r\n    // recursive call for right half\r\n    mergeSort(arr,mid+1,max);\r\n\r\n    // merging sub arrays\r\n    doMerge(arr,min,mid,max);\r\n}\r\n\r\nfunction doMerge(arr,min,mid,max){\r\n\r\n    let r = [];\r\n    let l = [];\r\n\r\n    const n1 = mid-min+1;\r\n    const n2 = max-mid;\r\n    for(let i = 0; i < n1; i++){\r\n        l.push(arr[min+i]);\r\n    }\r\n    for(let i = 0; i < n2; i++){\r\n        r.push(arr[mid+1+i]);\r\n    }\r\n    let i = 0;\r\n    let j = 0;\r\n    let k = min;\r\n\r\n\r\n    // Compair and copy the element in main array in sorted form\r\n\r\n    while(i<n1 && j < n2){\r\n        //TODO: add in a array\r\n\r\n        CHANGE.push([min+i,1]);\r\n        CHANGE.push([mid+j+1,1]);\r\n        if (l[i] <= r[j]) {\r\n\r\n            arr[k] = l[i];\r\n            //TODO: add in a array\r\n\r\n            CHANGE.push([k,1]);\r\n            CHANGE.push([k,2,l[i]]);\r\n            CHANGE.push([k,0]);\r\n            CHANGE.push([min+i,0]);\r\n            i++;\r\n        }\r\n        else {\r\n            arr[k] = r[j];\r\n     \r\n            //TODO: add in a array\r\n            CHANGE.push([k,1]);\r\n            CHANGE.push([k,2,r[j]]);\r\n            CHANGE.push([k,0]);\r\n            CHANGE.push([mid+j+1,0]);\r\n            j++;\r\n        }\r\n        k++;\r\n        \r\n        \r\n    }\r\n        // Copy the remaining elements of\r\n    // L[], if there are any\r\n    while (i < n1) {\r\n        arr[k] = l[i];\r\n       \r\n        //TODO: add in a array\r\n        CHANGE.push([k,1]);\r\n            CHANGE.push([k,2,l[i]]);\r\n            CHANGE.push([k,0]);\r\n            CHANGE.push([min+i,0]);\r\n        i++;\r\n        k++;\r\n    }\r\n \r\n    // Copy the remaining elements of\r\n    // R[], if there are any\r\n    while (j < n2) {\r\n        arr[k] = r[j];\r\n  \r\n        //TODO: add in a array\r\n        CHANGE.push([k,1]);\r\n            CHANGE.push([k,2,r[j]]);\r\n            CHANGE.push([k,0]);\r\n            CHANGE.push([mid+j+1,0]);\r\n        j++;\r\n        k++;\r\n    }\r\n    \r\n\r\n \r\n\r\n\r\n}","\r\nimport React, { useState } from 'react';\r\n\r\n\r\n\r\n\r\nexport const Slide = ({resetArray,min,max}) => {\r\n  // console.log(\"This is slide component\", resetArray.);\r\n  const slideChange = () =>{\r\n    setValue(document.getElementById(\"myslide\").value);\r\n    resetArray();\r\n    // resetArray(document.getElementById(\"myslide\").value);\r\n  }\r\n  const [value,setValue] = useState(10);\r\n  return (\r\n    <>\r\n\r\n    <input type=\"range\" value={value} min={min} max={max} onChange={slideChange} id=\"myslide\"></input>\r\n    </>\r\n  );\r\n}","import React from 'react';\r\nimport './home.css';\r\n// import {getMergeSortAnimations} from './getMergeSortAnimation'\r\n\r\nimport {getBubbleSortAnimations} from './getBubbleSortAnimations'\r\nimport {getQuickSortAnimations} from './gerQuickSortAnimations'\r\n\r\nimport {merge} from './getMertgeSortAnimation';\r\n\r\nimport {Slide} from './slide'\r\n\r\n\r\n\r\n\r\n// Change this value for the speed of the animations.\r\nconst ANIMATION_SPEED_MS = 10;\r\n\r\n\r\n// Change this value for the number of bars (value) in the array.\r\n//const NUMBER_OF_ARRAY_BARS = 310;\r\n\r\n// This is the main color of the array bars.\r\nconst PRIMARY_COLOR = 'Blue';\r\n\r\n// This is the color of array bars that are being compared throughout the animations.\r\nconst SECONDARY_COLOR = 'yellow';\r\nconst PIOVOT_COLOR = 'red';\r\n\r\nexport class Home extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            array: [10,12],\r\n        };\r\n    }\r\n\r\n    componentDidMount(){\r\n\r\n        this.resetArray(10);\r\n    }\r\n\r\n  startSort = () => {\r\n    const algo = document.querySelector(\"#select\");\r\n\r\n\r\n\r\n    if (algo.value === \"Merge Sort\") {\r\n      this.mergeSort();\r\n    }\r\n    if (algo.value === \"Bubble Sort\") {\r\n      this.bubbleSort();\r\n    }\r\n    if (algo.value === \"Quick Sort\") {\r\n      this.quickSort();\r\n    }\r\n  }\r\n  \r\nresetArray(ref){\r\n  let n = ref;\r\n    const array = [];\r\n\r\n    for(let i = 0; i < n; ++i){\r\n        array.push(randomIntFromInterval(10,300));\r\n    }\r\n    this.setState({array});\r\n}\r\n\r\nreset = () =>{\r\n          let n = document.getElementById(\"myslide\").value;\r\n          this.resetArray(n);\r\n}\r\n\r\n\r\nheapSort(){\r\n\r\n}\r\nmergeSort(){\r\n\r\n  const m = document.getElementsByTagName(\"button\");\r\n  let timeout = 0;\r\n  for(let i = 0 ; i < m.length; ++i){\r\n    m[i].disabled = true;\r\n  }\r\n  const s = document.getElementById(\"myslide\");\r\n  s.disabled = true;\r\n  const [CHANGE] = merge(this.state.array);\r\n\r\n\r\n  const arrBar = document.getElementsByClassName(\"array-bar\");\r\n    \r\n    for(let i = 0; i < CHANGE.length; i++){\r\n        let current = CHANGE[i];\r\n\r\n        \r\n        if(current[1] === 0){\r\n            \r\n            setTimeout(()=>{\r\n                arrBar[current[0]].style.backgroundColor = PRIMARY_COLOR;\r\n            },i*ANIMATION_SPEED_MS);\r\n        }\r\n        else if(current[1] === 1){\r\n            \r\n            setTimeout(()=>{\r\n                arrBar[current[0]].style.backgroundColor = SECONDARY_COLOR;\r\n            },i*ANIMATION_SPEED_MS);\r\n        }\r\n        else if(current[1] === 2){\r\n            \r\n            setTimeout(()=>{\r\n                arrBar[current[0]].style.height = `${current[2]}px`;\r\n            },i*ANIMATION_SPEED_MS);\r\n        }\r\n        timeout = i;\r\n    }\r\n\r\n\r\n  setTimeout(()=>{\r\n    for(let i = 0 ; i < m.length; ++i){\r\n      m[i].disabled = false;\r\n    }\r\n    s.disabled = false;\r\n  }, timeout * ANIMATION_SPEED_MS);\r\n \r\n  // setTimeout(() => {\r\n  //   this.setState({ array });\r\n  // }, timeout * ANIMATION_SPEED_MS);\r\n  // this.setState({array});\r\n    // const animations = getMergeSortAnimations(this.state.array);\r\n//     for (let i = 0; i < animations.length; i++) {\r\n//       const arrayBars = document.getElementsByClassName('array-bar'); \r\n//       const isColorChange = i % 3 !== 2;\r\n//       if (isColorChange) {\r\n//         const [barOneIdx, barTwoIdx] = animations[i];\r\n//         const barOneStyle = arrayBars[barOneIdx].style;\r\n//         const barTwoStyle = arrayBars[barTwoIdx].style;\r\n//         const color = i % 3 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\r\n//         //console.log(i);\r\n//         setTimeout(() => {\r\n//           // console.log(\"changig color\");\r\n//           barOneStyle.backgroundColor = color;\r\n//           barTwoStyle.backgroundColor = color;\r\n//         }, i * ANIMATION_SPEED_MS);\r\n//       } else {\r\n//         setTimeout(() => {\r\n//           //console.log(\"Cahnging height\");\r\n//           const [barOneIdx, newHeight] = animations[i];\r\n//           const barOneStyle = arrayBars[barOneIdx].style;\r\n//           barOneStyle.height = `${newHeight}px`;\r\n//         }, i * ANIMATION_SPEED_MS);\r\n//       }\r\n//       timeout = i;\r\n//     }\r\n   \r\n//     setTimeout(()=>{\r\n//       for(let i = 0 ; i < m.length; ++i){\r\n//         m[i].disabled = false;\r\n//       }\r\n//       s.disabled = false;\r\n//     }, timeout * ANIMATION_SPEED_MS);\r\n }\r\n\r\nbubbleSort(){\r\n  const m = document.getElementsByTagName(\"button\");\r\n  const s = document.getElementById(\"myslide\");\r\n  for(let i = 0 ; i < m.length; ++i){\r\n    m[i].disabled = true;\r\n  }\r\n  s.disabled = true;\r\n  let timeout = 0;\r\n  const animations = getBubbleSortAnimations(this.state.array);\r\n  const arrayLength = animations.length;\r\n  for(let i = 0; i < arrayLength; ++i){\r\n    const [barOneIdx,barTwoIdx,col,barOneHeight,barTwoHeight] = animations[i];\r\n    const arrayBars = document.getElementsByClassName('array-bar');\r\n    const barOne = arrayBars[barOneIdx].style;\r\n    const barTwo = arrayBars[barTwoIdx].style;\r\n    if(col === 0){\r\n      setTimeout(() =>{\r\n        barOne.backgroundColor = SECONDARY_COLOR;\r\n        barTwo.backgroundColor = SECONDARY_COLOR;\r\n      }, i * ANIMATION_SPEED_MS);\r\n      clearTimeout();\r\n    }\r\n    else{\r\n      setTimeout(() => {\r\n        barOne.backgroundColor = PRIMARY_COLOR;\r\n        barTwo.backgroundColor = PRIMARY_COLOR;\r\n        barOne.height = `${barTwoHeight}px`;\r\n        barTwo.height = `${barOneHeight}px`;\r\n      }, i * ANIMATION_SPEED_MS);\r\n    }\r\n    timeout  = i;\r\n  }\r\n\r\n\r\n  setTimeout(() => {\r\n    for(let i = 0 ; i < m.length; ++i){\r\n      m[i].disabled = false;\r\n    }\r\n    s.disabled = false;\r\n  },timeout*ANIMATION_SPEED_MS);\r\n  }\r\n  \r\n\r\n  quickSort() {\r\n    // console.log(this.state.array)\r\n    // console.log(getQuickSortAnimations(this.state.array))\r\n    const m = document.getElementsByTagName(\"button\");\r\n  const s = document.getElementById(\"myslide\");\r\n  for(let i = 0 ; i < m.length; ++i){\r\n    m[i].disabled = true;\r\n  }\r\n  s.disabled = true;\r\n  let timeout = 0;\r\n\r\n    const animations = getQuickSortAnimations(this.state.array);\r\n\r\n    const length = animations.length;\r\n\r\n    for (let i = 0; i < length; i++){\r\n      const animation = animations[i];\r\n\r\n      if (animation.length === 3) {\r\n        if (animation[animation.length - 1] === 4) {\r\n          setTimeout(() => {\r\n            \r\n            const index = animation[0];\r\n            const arrayBars = document.getElementsByClassName('array-bar');\r\n            const bar = arrayBars[index].style;\r\n            bar.backgroundColor = PIOVOT_COLOR;\r\n            // console.log(index)\r\n          },i*ANIMATION_SPEED_MS)\r\n        }\r\n\r\n        if (animation[animation.length - 1] === 0) {\r\n          setTimeout(() => {\r\n            \r\n            const index1 = animation[0];\r\n            const index2 = animation[1];\r\n            const arrayBars = document.getElementsByClassName('array-bar');\r\n            const barOne = arrayBars[index1].style;\r\n            const barTwo = arrayBars[index2].style;\r\n            \r\n            barOne.backgroundColor = PRIMARY_COLOR;\r\n            barTwo.backgroundColor = PRIMARY_COLOR;\r\n          },i*ANIMATION_SPEED_MS)\r\n        }\r\n\r\n        if (animation[animation.length - 1] === 2) {\r\n          setTimeout(() => {\r\n            \r\n            const index1 = animation[0];\r\n            const index2 = animation[1];\r\n            const arrayBars = document.getElementsByClassName('array-bar');\r\n            const barOne = arrayBars[index1].style;\r\n            const barTwo = arrayBars[index2].style;\r\n            \r\n            barOne.backgroundColor = SECONDARY_COLOR;\r\n            barTwo.backgroundColor = SECONDARY_COLOR;\r\n          },i*ANIMATION_SPEED_MS)\r\n          }\r\n      }\r\n      else {\r\n        setTimeout(() => {\r\n            \r\n          const [index1, height1, index2, height2] = animation;\r\n          const arrayBars = document.getElementsByClassName('array-bar');\r\n          const barOne = arrayBars[index1].style;\r\n          const barTwo = arrayBars[index2].style;\r\n          \r\n          barOne.height = `${height1}px`;\r\n          barTwo.height = `${height2}px`;\r\n        },i*ANIMATION_SPEED_MS)\r\n      }\r\n      timeout  = i;\r\n    }\r\nsetTimeout(() => {\r\n    for(let i = 0 ; i < m.length; ++i){\r\n      m[i].disabled = false;\r\n    }\r\n    s.disabled = false;\r\n  },timeout*ANIMATION_SPEED_MS);\r\n\r\n  }\r\n\r\n\r\n    render(){\r\n        const array = this.state.array;  \r\n        return(\r\n            <div className=\"array-container\">\r\n           {array.map((value,idx) => (\r\n           <div className=\"array-bar\" key={idx}\r\n        style={\r\n            {\r\n                backgroundColor: PRIMARY_COLOR,height: `${value}px`,\r\n                \r\n            }\r\n        }>\r\n              \r\n           </div>\r\n           ))}\r\n           <br/>\r\n           \r\n           \r\n            \r\n            <div className=\"container\">\r\n              <button onClick={() => this.reset()}>Generate New Array</button>\r\n              <div className=\"algo-container\">\r\n                <select defaultValue=\"Merge Sort\" id=\"select\">\r\n                  <option value=\"Merge Sort\">Merge Sort</option>\r\n                  <option value=\"Bubble Sort\">Bubble Sort</option>\r\n                  <option value=\"Quick Sort\">Quick Sort</option>\r\n                </select>\r\n              </div>\r\n              <div className=\"slide-bar\">\r\n                <Slide resetArray={this.reset} min=\"10\" max={window.innerWidth/6}></Slide>\r\n                <p htmlFor=\"slide\">Array Size</p>\r\n              </div>\r\n\r\n              <button className=\"run-algo\" onClick={this.startSort}>Sort</button>\r\n            </div>\r\n            \r\n            </div>\r\n        );\r\n    }\r\n};\r\n// From https://stackoverflow.com/questions/4959975/generate-random-number-between-two-numbers-in-javascript\r\nfunction randomIntFromInterval(min, max) {\r\n    // min and max included\r\n    return Math.floor(Math.random() * (max - min + 1) + min);\r\n  }\r\n  ","import React from 'react';\nimport {Home} from './components/home'\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home></Home>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}